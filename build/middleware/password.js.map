{"version":3,"sources":["../../src/middleware/password.js"],"names":["isAdmin","role","checkPassword","password","passwordHash","bcrypt","compare","match","hashPassword","hash","generatePassword","charset","length","retVal","i","n","charAt","Math","floor","random","sendEmail","email","transporter","nodemailer","createTransport","host","port","secure","service","auth","user","process","env","EMAIL","pass","PASS","sendMail","from","to","subject","text","html","info","console","log","getTestMessageUrl"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAIO,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAcA,IAAI,IAAI,OAAR,GAAkB,IAAlB,GAAyB,KAAvC;AAAA,CAAhB;;;;AAIA,IAAMC,aAAa;AAAA,4FAAG,iBAAOC,QAAP,EAAiBC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLC,mBAAOC,OAAP,CAAeH,QAAf,EAAyBC,YAAzB,CADK;;AAAA;AACnBG,YAAAA,KADmB;;AAAA,iBAErBA,KAFqB;AAAA;AAAA;AAAA;;AAAA,6CAGd,IAHc;;AAAA;AAAA,6CAKlB,KALkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbL,aAAa;AAAA;AAAA;AAAA,GAAnB;;;;AASA,IAAMM,YAAY;AAAA,4FAAG,kBAAOL,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0BE,mBAAOI,IAAP,CAAYN,QAAZ,EAAsB,EAAtB,CAA1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZK,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAEA,IAAME,gBAAgB;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,YAAAA,OAFwB,GAEd,gEAFc;AAGxBC,YAAAA,MAHwB,GAGf,CAHe;AAIxBC,YAAAA,MAJwB,GAIf,EAJe;;AAK5B,iBAASC,CAAT,GAAa,CAAb,EAAgBC,CAAhB,GAAoBJ,OAAO,CAACC,MAA5B,EAAoCE,CAAC,GAAGF,MAAxC,EAAgD,EAAEE,CAAlD,EAAqD;AACjDD,cAAAA,MAAM,IAAIF,OAAO,CAACK,MAAR,CAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,CAAf,CAAV;AACH;;AAP2B,8CAQrBF,MARqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBH,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;;;AAaA,IAAMU,SAAS;AAAA,4FAAG,kBAAOC,KAAP,EAAclB,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjBmB,YAAAA,WAHiB,GAGHC,uBAAWC,eAAX,CAA2B;AACzCC,cAAAA,IAAI,EAAE,qBADmC;AAEzCC,cAAAA,IAAI,EAAE,GAFmC;AAGzCC,cAAAA,MAAM,EAAE,KAHiC;AAG1B;AACfC,cAAAA,OAAO,EAAE,OAJgC;AAKzCC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,KADhB;AAEFC,gBAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFhB;AALmC,aAA3B,CAHG;AAAA;AAAA,mBAcJb,WAAW,CAACc,QAAZ,CAAqB;AAClCC,cAAAA,IAAI,EAAE,yCAD4B;AAElCC,cAAAA,EAAE,EAAEjB,KAF8B;AAGlCkB,cAAAA,OAAO,EAAE,oBAHyB;AAIlCC,cAAAA,IAAI,EAAE,QAJ4B;AAKlCC,cAAAA,IAAI,wBAAiBpB,KAAjB,0CACalB,QADb;AAL8B,aAArB,CAdI;;AAAA;AAcjBuC,YAAAA,IAdiB;AAuBrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BrB,uBAAWsB,iBAAX,CAA6BH,IAA7B,CAA/B;;AAvBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATtB,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import bcrypt from 'bcrypt'\r\nimport nodemailer from \"nodemailer\";\r\n\r\n\r\n\r\nexport const isAdmin = ({ role }) => role == \"admin\" ? true : false\r\n\r\n\r\n\r\nexport const checkPassword = async (password, passwordHash) => {\r\n    const match = await bcrypt.compare(password, passwordHash);\r\n    if (match) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n\r\nexport const hashPassword = async (password) => await bcrypt.hash(password, 10);\r\n\r\nexport const generatePassword = async () => {\r\n\r\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    var length = 8;\r\n    var retVal = \"\";\r\n    for (var i = 0, n = charset.length; i < length; ++i) {\r\n        retVal += charset.charAt(Math.floor(Math.random() * n));\r\n    }\r\n    return retVal;\r\n\r\n\r\n}\r\n\r\nexport const sendEmail = async (email, password) => {\r\n\r\n\r\n    let transporter = nodemailer.createTransport({\r\n        host: \"smtp.ethereal.email\",\r\n        port: 587,\r\n        secure: false, // true for 465, false for other ports\r\n        service: \"Gmail\",\r\n        auth: {\r\n            user: process.env.EMAIL,\r\n            pass: process.env.PASS,\r\n        },\r\n    });\r\n\r\n    let info = await transporter.sendMail({\r\n        from: 'Welcome <checker.safiairline@gmail.com>',\r\n        to: email,\r\n        subject: \" send new account \",\r\n        text: \" Test \",\r\n        html: `<b>Email :  ${email}</b>\r\n        <b> password : ${password}</b>`,\r\n    });\r\n\r\n    console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n\r\n\r\n}"],"file":"password.js"}