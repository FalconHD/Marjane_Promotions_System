{"version":3,"sources":["../../src/middleware/profiles.js"],"names":["isSuper","req","res","next","headers","authorization","tokensData","split","process","env","JWT_SUPER_SECRET","role","status","json","message","Error","error","isAdCenter","JWT_CENTER_SECRET","console","log","isManager","JWT_MANAGER_SECRET"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAI;AACA,QAAIF,GAAG,CAACG,OAAJ,CAAYC,aAAhB,EAA+B;AAC3B,UAAMC,UAAU,GAAG,mBAAYL,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAZ,EAAqDC,OAAO,CAACC,GAAR,CAAYC,gBAAjE,CAAnB;;AACA,UAAIJ,UAAU,IAAIA,UAAU,CAACK,IAAX,KAAoB,aAAtC,EAAqD;AACjDR,QAAAA,IAAI;AACP,OAFD,MAEO;AACHD,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;AACJ,KATD,MASO;AACHX,MAAAA,IAAI,CAAC,IAAIY,KAAJ,CAAU,mBAAV,CAAD,CAAJ;AACH;AACJ,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZb,IAAAA,IAAI,CAACa,KAAD,CAAJ;AACH;AACJ,CAjBM;;;;AAmBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAI;AACA,QAAIF,GAAG,CAACG,OAAJ,CAAYC,aAAhB,EAA+B;AAC3B,UAAMC,UAAU,GAAG,mBAAYL,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAZ,EAAqDC,OAAO,CAACC,GAAR,CAAYS,iBAAjE,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;;AACA,UAAIA,UAAU,IAAIA,UAAU,CAACK,IAAX,KAAoB,cAAtC,EAAsD;AAClDR,QAAAA,IAAI;AACP,OAFD,MAEO;AACHD,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;AACJ,KAVD,MAUO;AACHX,MAAAA,IAAI,CAAC,IAAIY,KAAJ,CAAU,mBAAV,CAAD,CAAJ;AACH;AACJ,GAdD,CAcE,OAAOC,KAAP,EAAc;AACZb,IAAAA,IAAI,CAACa,KAAD,CAAJ;AACH;AACJ,CAlBM;;;;AAqBA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAI;AACA,QAAIF,GAAG,CAACG,OAAJ,CAAYC,aAAhB,EAA+B;AAC3B,UAAMC,UAAU,GAAG,mBAAYL,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAZ,EAAqDC,OAAO,CAACC,GAAR,CAAYa,kBAAjE,CAAnB;;AACA,UAAIhB,UAAU,IAAIA,UAAU,CAACK,IAAX,KAAoB,SAAtC,EAAiD;AAC7CR,QAAAA,IAAI;AACP,OAFD,MAEO;AACHD,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;AACJ,KATD,MASO;AACHX,MAAAA,IAAI,CAAC,IAAIY,KAAJ,CAAU,mBAAV,CAAD,CAAJ;AACH;AACJ,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZb,IAAAA,IAAI,CAACa,KAAD,CAAJ;AACH;AACJ,CAjBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { verifyToken } from \".\"\r\n\r\nexport const isSuper = (req, res, next) => {\r\n    try {\r\n        if (req.headers.authorization) {\r\n            const tokensData = verifyToken(req.headers.authorization.split(\" \")[1], process.env.JWT_SUPER_SECRET)\r\n            if (tokensData && tokensData.role === 'super_admin') {\r\n                next()\r\n            } else {\r\n                res.status(403).json({\r\n                    message: 'Access denied'\r\n                })\r\n            }\r\n        } else {\r\n            next(new Error('No token provided'))\r\n        }\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\nexport const isAdCenter = (req, res, next) => {\r\n    try {\r\n        if (req.headers.authorization) {\r\n            const tokensData = verifyToken(req.headers.authorization.split(\" \")[1], process.env.JWT_CENTER_SECRET)\r\n            console.log(tokensData);\r\n            if (tokensData && tokensData.role === 'admin_center') {\r\n                next()\r\n            } else {\r\n                res.status(403).json({\r\n                    message: 'Access denied'\r\n                })\r\n            }\r\n        } else {\r\n            next(new Error('No token provided'))\r\n        }\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\n\r\nexport const isManager = (req, res, next) => {\r\n    try {\r\n        if (req.headers.authorization) {\r\n            const tokensData = verifyToken(req.headers.authorization.split(\" \")[1], process.env.JWT_MANAGER_SECRET)\r\n            if (tokensData && tokensData.role === 'manager') {\r\n                next()\r\n            } else {\r\n                res.status(403).json({\r\n                    message: 'Access denied'\r\n                })\r\n            }\r\n        } else {\r\n            next(new Error('No token provided'))\r\n        }\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\n\r\n// const isAuthenticated = (req, res, next) => {\r\n//     try {\r\n//         if (req.headers.authorization) {\r\n//             const tokensData = verifyToken(req.headers.authorization.split(\" \")[1], process.env.JWT_SECRET)\r\n//             if (tokensData) {\r\n//                 next()\r\n//             } else {\r\n//                 res.status(403).json({\r\n//                     message: 'Access denied'\r\n//                 })\r\n//             }\r\n//         } else {\r\n//             next(new Error('No token provided'))\r\n//         }\r\n//     } catch (error) {\r\n//         next(error)\r\n//     }\r\n// }\r\n"],"file":"profiles.js"}